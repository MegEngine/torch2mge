import operator
import pickle
import numpy as np
import megengine.module as M
import megengine.functional as F
from megengine import jit, tensor


class Module(M.Module):

    def forward(self, inputs):
        return super().forward(inputs)

class Helper:

    @staticmethod
    def transpose_pat(ndim, a, b):
        pat = list(range(ndim))
        pat[a], pat[b] = pat[b], pat[a]
        return pat
    

root = Module()
root.conv1 = Module()
setattr(root.conv1, "0", M.Conv2d(in_channels=3, out_channels=24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=1, bias=False))
setattr(root.conv1, "1", M.BatchNorm2d(num_features=24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(root.conv1, "2", M.ReLU())
root.maxpool = M.MaxPool2d(kernel_size=3, stride=2, padding=1)
root.stage2 = Module()
setattr(root.stage2, "0", Module())
getattr(root.stage2, "0").branch1 = Module()
setattr(getattr(root.stage2, "0").branch1, "0", M.Conv2d(in_channels=24, out_channels=24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=24, bias=False))
setattr(getattr(root.stage2, "0").branch1, "1", M.BatchNorm2d(num_features=24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "0").branch1, "2", M.Conv2d(in_channels=24, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "0").branch1, "3", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "0").branch1, "4", M.ReLU())
getattr(root.stage2, "0").branch2 = Module()
setattr(getattr(root.stage2, "0").branch2, "0", M.Conv2d(in_channels=24, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "0").branch2, "1", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "0").branch2, "2", M.ReLU())
setattr(getattr(root.stage2, "0").branch2, "3", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=58, bias=False))
setattr(getattr(root.stage2, "0").branch2, "4", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "0").branch2, "5", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "0").branch2, "6", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "0").branch2, "7", M.ReLU())
setattr(root.stage2, "1", Module())
getattr(root.stage2, "1").branch2 = Module()
setattr(getattr(root.stage2, "1").branch2, "0", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "1").branch2, "1", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "1").branch2, "2", M.ReLU())
setattr(getattr(root.stage2, "1").branch2, "3", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=58, bias=False))
setattr(getattr(root.stage2, "1").branch2, "4", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "1").branch2, "5", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "1").branch2, "6", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "1").branch2, "7", M.ReLU())
setattr(root.stage2, "2", Module())
getattr(root.stage2, "2").branch2 = Module()
setattr(getattr(root.stage2, "2").branch2, "0", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "2").branch2, "1", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "2").branch2, "2", M.ReLU())
setattr(getattr(root.stage2, "2").branch2, "3", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=58, bias=False))
setattr(getattr(root.stage2, "2").branch2, "4", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "2").branch2, "5", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "2").branch2, "6", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "2").branch2, "7", M.ReLU())
setattr(root.stage2, "3", Module())
getattr(root.stage2, "3").branch2 = Module()
setattr(getattr(root.stage2, "3").branch2, "0", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "3").branch2, "1", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "3").branch2, "2", M.ReLU())
setattr(getattr(root.stage2, "3").branch2, "3", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=58, bias=False))
setattr(getattr(root.stage2, "3").branch2, "4", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "3").branch2, "5", M.Conv2d(in_channels=58, out_channels=58, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage2, "3").branch2, "6", M.BatchNorm2d(num_features=58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage2, "3").branch2, "7", M.ReLU())
root.stage3 = Module()
setattr(root.stage3, "0", Module())
getattr(root.stage3, "0").branch1 = Module()
setattr(getattr(root.stage3, "0").branch1, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "0").branch1, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "0").branch1, "2", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "0").branch1, "3", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "0").branch1, "4", M.ReLU())
getattr(root.stage3, "0").branch2 = Module()
setattr(getattr(root.stage3, "0").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "0").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "0").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "0").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "0").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "0").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "0").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "0").branch2, "7", M.ReLU())
setattr(root.stage3, "1", Module())
getattr(root.stage3, "1").branch2 = Module()
setattr(getattr(root.stage3, "1").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "1").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "1").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "1").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "1").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "1").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "1").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "1").branch2, "7", M.ReLU())
setattr(root.stage3, "2", Module())
getattr(root.stage3, "2").branch2 = Module()
setattr(getattr(root.stage3, "2").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "2").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "2").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "2").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "2").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "2").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "2").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "2").branch2, "7", M.ReLU())
setattr(root.stage3, "3", Module())
getattr(root.stage3, "3").branch2 = Module()
setattr(getattr(root.stage3, "3").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "3").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "3").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "3").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "3").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "3").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "3").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "3").branch2, "7", M.ReLU())
setattr(root.stage3, "4", Module())
getattr(root.stage3, "4").branch2 = Module()
setattr(getattr(root.stage3, "4").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "4").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "4").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "4").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "4").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "4").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "4").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "4").branch2, "7", M.ReLU())
setattr(root.stage3, "5", Module())
getattr(root.stage3, "5").branch2 = Module()
setattr(getattr(root.stage3, "5").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "5").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "5").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "5").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "5").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "5").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "5").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "5").branch2, "7", M.ReLU())
setattr(root.stage3, "6", Module())
getattr(root.stage3, "6").branch2 = Module()
setattr(getattr(root.stage3, "6").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "6").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "6").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "6").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "6").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "6").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "6").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "6").branch2, "7", M.ReLU())
setattr(root.stage3, "7", Module())
getattr(root.stage3, "7").branch2 = Module()
setattr(getattr(root.stage3, "7").branch2, "0", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "7").branch2, "1", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "7").branch2, "2", M.ReLU())
setattr(getattr(root.stage3, "7").branch2, "3", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=116, bias=False))
setattr(getattr(root.stage3, "7").branch2, "4", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "7").branch2, "5", M.Conv2d(in_channels=116, out_channels=116, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage3, "7").branch2, "6", M.BatchNorm2d(num_features=116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage3, "7").branch2, "7", M.ReLU())
root.stage4 = Module()
setattr(root.stage4, "0", Module())
getattr(root.stage4, "0").branch1 = Module()
setattr(getattr(root.stage4, "0").branch1, "0", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=232, bias=False))
setattr(getattr(root.stage4, "0").branch1, "1", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "0").branch1, "2", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "0").branch1, "3", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "0").branch1, "4", M.ReLU())
getattr(root.stage4, "0").branch2 = Module()
setattr(getattr(root.stage4, "0").branch2, "0", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "0").branch2, "1", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "0").branch2, "2", M.ReLU())
setattr(getattr(root.stage4, "0").branch2, "3", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=232, bias=False))
setattr(getattr(root.stage4, "0").branch2, "4", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "0").branch2, "5", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "0").branch2, "6", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "0").branch2, "7", M.ReLU())
setattr(root.stage4, "1", Module())
getattr(root.stage4, "1").branch2 = Module()
setattr(getattr(root.stage4, "1").branch2, "0", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "1").branch2, "1", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "1").branch2, "2", M.ReLU())
setattr(getattr(root.stage4, "1").branch2, "3", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=232, bias=False))
setattr(getattr(root.stage4, "1").branch2, "4", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "1").branch2, "5", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "1").branch2, "6", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "1").branch2, "7", M.ReLU())
setattr(root.stage4, "2", Module())
getattr(root.stage4, "2").branch2 = Module()
setattr(getattr(root.stage4, "2").branch2, "0", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "2").branch2, "1", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "2").branch2, "2", M.ReLU())
setattr(getattr(root.stage4, "2").branch2, "3", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=232, bias=False))
setattr(getattr(root.stage4, "2").branch2, "4", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "2").branch2, "5", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "2").branch2, "6", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "2").branch2, "7", M.ReLU())
setattr(root.stage4, "3", Module())
getattr(root.stage4, "3").branch2 = Module()
setattr(getattr(root.stage4, "3").branch2, "0", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "3").branch2, "1", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "3").branch2, "2", M.ReLU())
setattr(getattr(root.stage4, "3").branch2, "3", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=232, bias=False))
setattr(getattr(root.stage4, "3").branch2, "4", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "3").branch2, "5", M.Conv2d(in_channels=232, out_channels=232, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(getattr(root.stage4, "3").branch2, "6", M.BatchNorm2d(num_features=232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(getattr(root.stage4, "3").branch2, "7", M.ReLU())
root.conv5 = Module()
setattr(root.conv5, "0", M.Conv2d(in_channels=464, out_channels=1024, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), groups=1, bias=False))
setattr(root.conv5, "1", M.BatchNorm2d(num_features=1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
setattr(root.conv5, "2", M.ReLU())
root.fc = M.Linear(in_features=1024, out_features=1000, bias=True)

@jit.trace(capture_as_const=True)
def forward(x):
    conv1_0=getattr(root.conv1, "0")(x)
    conv1_1=getattr(root.conv1, "1")(conv1_0)
    conv1_2=getattr(root.conv1, "2")(conv1_1)
    maxpool=root.maxpool(conv1_2)
    stage2_0_branch1_0=getattr(getattr(root.stage2, "0").branch1, "0")(maxpool)
    stage2_0_branch1_1=getattr(getattr(root.stage2, "0").branch1, "1")(stage2_0_branch1_0)
    stage2_0_branch1_2=getattr(getattr(root.stage2, "0").branch1, "2")(stage2_0_branch1_1)
    stage2_0_branch1_3=getattr(getattr(root.stage2, "0").branch1, "3")(stage2_0_branch1_2)
    stage2_0_branch1_4=getattr(getattr(root.stage2, "0").branch1, "4")(stage2_0_branch1_3)
    stage2_0_branch2_0=getattr(getattr(root.stage2, "0").branch2, "0")(maxpool)
    stage2_0_branch2_1=getattr(getattr(root.stage2, "0").branch2, "1")(stage2_0_branch2_0)
    stage2_0_branch2_2=getattr(getattr(root.stage2, "0").branch2, "2")(stage2_0_branch2_1)
    stage2_0_branch2_3=getattr(getattr(root.stage2, "0").branch2, "3")(stage2_0_branch2_2)
    stage2_0_branch2_4=getattr(getattr(root.stage2, "0").branch2, "4")(stage2_0_branch2_3)
    stage2_0_branch2_5=getattr(getattr(root.stage2, "0").branch2, "5")(stage2_0_branch2_4)
    stage2_0_branch2_6=getattr(getattr(root.stage2, "0").branch2, "6")(stage2_0_branch2_5)
    stage2_0_branch2_7=getattr(getattr(root.stage2, "0").branch2, "7")(stage2_0_branch2_6)
    cat_1=F.concat((stage2_0_branch1_4, stage2_0_branch2_7), axis = 1)
    size=cat_1.shape
    getitem=operator.getitem(size, 0)
    getitem_1=operator.getitem(size, 1)
    getitem_2=operator.getitem(size, 2)
    getitem_3=operator.getitem(size, 3)
    floordiv=operator.floordiv(getitem_1, 2)
    view=cat_1.reshape(getitem, 2, floordiv, getitem_2, getitem_3)
    transpose_1=F.transpose(view, Helper.transpose_pat(view.ndim, 1, 2))
    contiguous=transpose_1
    view_1=contiguous.reshape(getitem, -1, getitem_2, getitem_3)
    chunk_1=F.split(view_1, 2, axis=1)
    getitem_4=operator.getitem(chunk_1, 0)
    getitem_5=operator.getitem(chunk_1, 1)
    stage2_1_branch2_0=getattr(getattr(root.stage2, "1").branch2, "0")(getitem_5)
    stage2_1_branch2_1=getattr(getattr(root.stage2, "1").branch2, "1")(stage2_1_branch2_0)
    stage2_1_branch2_2=getattr(getattr(root.stage2, "1").branch2, "2")(stage2_1_branch2_1)
    stage2_1_branch2_3=getattr(getattr(root.stage2, "1").branch2, "3")(stage2_1_branch2_2)
    stage2_1_branch2_4=getattr(getattr(root.stage2, "1").branch2, "4")(stage2_1_branch2_3)
    stage2_1_branch2_5=getattr(getattr(root.stage2, "1").branch2, "5")(stage2_1_branch2_4)
    stage2_1_branch2_6=getattr(getattr(root.stage2, "1").branch2, "6")(stage2_1_branch2_5)
    stage2_1_branch2_7=getattr(getattr(root.stage2, "1").branch2, "7")(stage2_1_branch2_6)
    cat_2=F.concat((getitem_4, stage2_1_branch2_7), axis = 1)
    size_1=cat_2.shape
    getitem_6=operator.getitem(size_1, 0)
    getitem_7=operator.getitem(size_1, 1)
    getitem_8=operator.getitem(size_1, 2)
    getitem_9=operator.getitem(size_1, 3)
    floordiv_1=operator.floordiv(getitem_7, 2)
    view_2=cat_2.reshape(getitem_6, 2, floordiv_1, getitem_8, getitem_9)
    transpose_2=F.transpose(view_2, Helper.transpose_pat(view_2.ndim, 1, 2))
    contiguous_1=transpose_2
    view_3=contiguous_1.reshape(getitem_6, -1, getitem_8, getitem_9)
    chunk_2=F.split(view_3, 2, axis=1)
    getitem_10=operator.getitem(chunk_2, 0)
    getitem_11=operator.getitem(chunk_2, 1)
    stage2_2_branch2_0=getattr(getattr(root.stage2, "2").branch2, "0")(getitem_11)
    stage2_2_branch2_1=getattr(getattr(root.stage2, "2").branch2, "1")(stage2_2_branch2_0)
    stage2_2_branch2_2=getattr(getattr(root.stage2, "2").branch2, "2")(stage2_2_branch2_1)
    stage2_2_branch2_3=getattr(getattr(root.stage2, "2").branch2, "3")(stage2_2_branch2_2)
    stage2_2_branch2_4=getattr(getattr(root.stage2, "2").branch2, "4")(stage2_2_branch2_3)
    stage2_2_branch2_5=getattr(getattr(root.stage2, "2").branch2, "5")(stage2_2_branch2_4)
    stage2_2_branch2_6=getattr(getattr(root.stage2, "2").branch2, "6")(stage2_2_branch2_5)
    stage2_2_branch2_7=getattr(getattr(root.stage2, "2").branch2, "7")(stage2_2_branch2_6)
    cat_3=F.concat((getitem_10, stage2_2_branch2_7), axis = 1)
    size_2=cat_3.shape
    getitem_12=operator.getitem(size_2, 0)
    getitem_13=operator.getitem(size_2, 1)
    getitem_14=operator.getitem(size_2, 2)
    getitem_15=operator.getitem(size_2, 3)
    floordiv_2=operator.floordiv(getitem_13, 2)
    view_4=cat_3.reshape(getitem_12, 2, floordiv_2, getitem_14, getitem_15)
    transpose_3=F.transpose(view_4, Helper.transpose_pat(view_4.ndim, 1, 2))
    contiguous_2=transpose_3
    view_5=contiguous_2.reshape(getitem_12, -1, getitem_14, getitem_15)
    chunk_3=F.split(view_5, 2, axis=1)
    getitem_16=operator.getitem(chunk_3, 0)
    getitem_17=operator.getitem(chunk_3, 1)
    stage2_3_branch2_0=getattr(getattr(root.stage2, "3").branch2, "0")(getitem_17)
    stage2_3_branch2_1=getattr(getattr(root.stage2, "3").branch2, "1")(stage2_3_branch2_0)
    stage2_3_branch2_2=getattr(getattr(root.stage2, "3").branch2, "2")(stage2_3_branch2_1)
    stage2_3_branch2_3=getattr(getattr(root.stage2, "3").branch2, "3")(stage2_3_branch2_2)
    stage2_3_branch2_4=getattr(getattr(root.stage2, "3").branch2, "4")(stage2_3_branch2_3)
    stage2_3_branch2_5=getattr(getattr(root.stage2, "3").branch2, "5")(stage2_3_branch2_4)
    stage2_3_branch2_6=getattr(getattr(root.stage2, "3").branch2, "6")(stage2_3_branch2_5)
    stage2_3_branch2_7=getattr(getattr(root.stage2, "3").branch2, "7")(stage2_3_branch2_6)
    cat_4=F.concat((getitem_16, stage2_3_branch2_7), axis = 1)
    size_3=cat_4.shape
    getitem_18=operator.getitem(size_3, 0)
    getitem_19=operator.getitem(size_3, 1)
    getitem_20=operator.getitem(size_3, 2)
    getitem_21=operator.getitem(size_3, 3)
    floordiv_3=operator.floordiv(getitem_19, 2)
    view_6=cat_4.reshape(getitem_18, 2, floordiv_3, getitem_20, getitem_21)
    transpose_4=F.transpose(view_6, Helper.transpose_pat(view_6.ndim, 1, 2))
    contiguous_3=transpose_4
    view_7=contiguous_3.reshape(getitem_18, -1, getitem_20, getitem_21)
    stage3_0_branch1_0=getattr(getattr(root.stage3, "0").branch1, "0")(view_7)
    stage3_0_branch1_1=getattr(getattr(root.stage3, "0").branch1, "1")(stage3_0_branch1_0)
    stage3_0_branch1_2=getattr(getattr(root.stage3, "0").branch1, "2")(stage3_0_branch1_1)
    stage3_0_branch1_3=getattr(getattr(root.stage3, "0").branch1, "3")(stage3_0_branch1_2)
    stage3_0_branch1_4=getattr(getattr(root.stage3, "0").branch1, "4")(stage3_0_branch1_3)
    stage3_0_branch2_0=getattr(getattr(root.stage3, "0").branch2, "0")(view_7)
    stage3_0_branch2_1=getattr(getattr(root.stage3, "0").branch2, "1")(stage3_0_branch2_0)
    stage3_0_branch2_2=getattr(getattr(root.stage3, "0").branch2, "2")(stage3_0_branch2_1)
    stage3_0_branch2_3=getattr(getattr(root.stage3, "0").branch2, "3")(stage3_0_branch2_2)
    stage3_0_branch2_4=getattr(getattr(root.stage3, "0").branch2, "4")(stage3_0_branch2_3)
    stage3_0_branch2_5=getattr(getattr(root.stage3, "0").branch2, "5")(stage3_0_branch2_4)
    stage3_0_branch2_6=getattr(getattr(root.stage3, "0").branch2, "6")(stage3_0_branch2_5)
    stage3_0_branch2_7=getattr(getattr(root.stage3, "0").branch2, "7")(stage3_0_branch2_6)
    cat_5=F.concat((stage3_0_branch1_4, stage3_0_branch2_7), axis = 1)
    size_4=cat_5.shape
    getitem_22=operator.getitem(size_4, 0)
    getitem_23=operator.getitem(size_4, 1)
    getitem_24=operator.getitem(size_4, 2)
    getitem_25=operator.getitem(size_4, 3)
    floordiv_4=operator.floordiv(getitem_23, 2)
    view_8=cat_5.reshape(getitem_22, 2, floordiv_4, getitem_24, getitem_25)
    transpose_5=F.transpose(view_8, Helper.transpose_pat(view_8.ndim, 1, 2))
    contiguous_4=transpose_5
    view_9=contiguous_4.reshape(getitem_22, -1, getitem_24, getitem_25)
    chunk_4=F.split(view_9, 2, axis=1)
    getitem_26=operator.getitem(chunk_4, 0)
    getitem_27=operator.getitem(chunk_4, 1)
    stage3_1_branch2_0=getattr(getattr(root.stage3, "1").branch2, "0")(getitem_27)
    stage3_1_branch2_1=getattr(getattr(root.stage3, "1").branch2, "1")(stage3_1_branch2_0)
    stage3_1_branch2_2=getattr(getattr(root.stage3, "1").branch2, "2")(stage3_1_branch2_1)
    stage3_1_branch2_3=getattr(getattr(root.stage3, "1").branch2, "3")(stage3_1_branch2_2)
    stage3_1_branch2_4=getattr(getattr(root.stage3, "1").branch2, "4")(stage3_1_branch2_3)
    stage3_1_branch2_5=getattr(getattr(root.stage3, "1").branch2, "5")(stage3_1_branch2_4)
    stage3_1_branch2_6=getattr(getattr(root.stage3, "1").branch2, "6")(stage3_1_branch2_5)
    stage3_1_branch2_7=getattr(getattr(root.stage3, "1").branch2, "7")(stage3_1_branch2_6)
    cat_6=F.concat((getitem_26, stage3_1_branch2_7), axis = 1)
    size_5=cat_6.shape
    getitem_28=operator.getitem(size_5, 0)
    getitem_29=operator.getitem(size_5, 1)
    getitem_30=operator.getitem(size_5, 2)
    getitem_31=operator.getitem(size_5, 3)
    floordiv_5=operator.floordiv(getitem_29, 2)
    view_10=cat_6.reshape(getitem_28, 2, floordiv_5, getitem_30, getitem_31)
    transpose_6=F.transpose(view_10, Helper.transpose_pat(view_10.ndim, 1, 2))
    contiguous_5=transpose_6
    view_11=contiguous_5.reshape(getitem_28, -1, getitem_30, getitem_31)
    chunk_5=F.split(view_11, 2, axis=1)
    getitem_32=operator.getitem(chunk_5, 0)
    getitem_33=operator.getitem(chunk_5, 1)
    stage3_2_branch2_0=getattr(getattr(root.stage3, "2").branch2, "0")(getitem_33)
    stage3_2_branch2_1=getattr(getattr(root.stage3, "2").branch2, "1")(stage3_2_branch2_0)
    stage3_2_branch2_2=getattr(getattr(root.stage3, "2").branch2, "2")(stage3_2_branch2_1)
    stage3_2_branch2_3=getattr(getattr(root.stage3, "2").branch2, "3")(stage3_2_branch2_2)
    stage3_2_branch2_4=getattr(getattr(root.stage3, "2").branch2, "4")(stage3_2_branch2_3)
    stage3_2_branch2_5=getattr(getattr(root.stage3, "2").branch2, "5")(stage3_2_branch2_4)
    stage3_2_branch2_6=getattr(getattr(root.stage3, "2").branch2, "6")(stage3_2_branch2_5)
    stage3_2_branch2_7=getattr(getattr(root.stage3, "2").branch2, "7")(stage3_2_branch2_6)
    cat_7=F.concat((getitem_32, stage3_2_branch2_7), axis = 1)
    size_6=cat_7.shape
    getitem_34=operator.getitem(size_6, 0)
    getitem_35=operator.getitem(size_6, 1)
    getitem_36=operator.getitem(size_6, 2)
    getitem_37=operator.getitem(size_6, 3)
    floordiv_6=operator.floordiv(getitem_35, 2)
    view_12=cat_7.reshape(getitem_34, 2, floordiv_6, getitem_36, getitem_37)
    transpose_7=F.transpose(view_12, Helper.transpose_pat(view_12.ndim, 1, 2))
    contiguous_6=transpose_7
    view_13=contiguous_6.reshape(getitem_34, -1, getitem_36, getitem_37)
    chunk_6=F.split(view_13, 2, axis=1)
    getitem_38=operator.getitem(chunk_6, 0)
    getitem_39=operator.getitem(chunk_6, 1)
    stage3_3_branch2_0=getattr(getattr(root.stage3, "3").branch2, "0")(getitem_39)
    stage3_3_branch2_1=getattr(getattr(root.stage3, "3").branch2, "1")(stage3_3_branch2_0)
    stage3_3_branch2_2=getattr(getattr(root.stage3, "3").branch2, "2")(stage3_3_branch2_1)
    stage3_3_branch2_3=getattr(getattr(root.stage3, "3").branch2, "3")(stage3_3_branch2_2)
    stage3_3_branch2_4=getattr(getattr(root.stage3, "3").branch2, "4")(stage3_3_branch2_3)
    stage3_3_branch2_5=getattr(getattr(root.stage3, "3").branch2, "5")(stage3_3_branch2_4)
    stage3_3_branch2_6=getattr(getattr(root.stage3, "3").branch2, "6")(stage3_3_branch2_5)
    stage3_3_branch2_7=getattr(getattr(root.stage3, "3").branch2, "7")(stage3_3_branch2_6)
    cat_8=F.concat((getitem_38, stage3_3_branch2_7), axis = 1)
    size_7=cat_8.shape
    getitem_40=operator.getitem(size_7, 0)
    getitem_41=operator.getitem(size_7, 1)
    getitem_42=operator.getitem(size_7, 2)
    getitem_43=operator.getitem(size_7, 3)
    floordiv_7=operator.floordiv(getitem_41, 2)
    view_14=cat_8.reshape(getitem_40, 2, floordiv_7, getitem_42, getitem_43)
    transpose_8=F.transpose(view_14, Helper.transpose_pat(view_14.ndim, 1, 2))
    contiguous_7=transpose_8
    view_15=contiguous_7.reshape(getitem_40, -1, getitem_42, getitem_43)
    chunk_7=F.split(view_15, 2, axis=1)
    getitem_44=operator.getitem(chunk_7, 0)
    getitem_45=operator.getitem(chunk_7, 1)
    stage3_4_branch2_0=getattr(getattr(root.stage3, "4").branch2, "0")(getitem_45)
    stage3_4_branch2_1=getattr(getattr(root.stage3, "4").branch2, "1")(stage3_4_branch2_0)
    stage3_4_branch2_2=getattr(getattr(root.stage3, "4").branch2, "2")(stage3_4_branch2_1)
    stage3_4_branch2_3=getattr(getattr(root.stage3, "4").branch2, "3")(stage3_4_branch2_2)
    stage3_4_branch2_4=getattr(getattr(root.stage3, "4").branch2, "4")(stage3_4_branch2_3)
    stage3_4_branch2_5=getattr(getattr(root.stage3, "4").branch2, "5")(stage3_4_branch2_4)
    stage3_4_branch2_6=getattr(getattr(root.stage3, "4").branch2, "6")(stage3_4_branch2_5)
    stage3_4_branch2_7=getattr(getattr(root.stage3, "4").branch2, "7")(stage3_4_branch2_6)
    cat_9=F.concat((getitem_44, stage3_4_branch2_7), axis = 1)
    size_8=cat_9.shape
    getitem_46=operator.getitem(size_8, 0)
    getitem_47=operator.getitem(size_8, 1)
    getitem_48=operator.getitem(size_8, 2)
    getitem_49=operator.getitem(size_8, 3)
    floordiv_8=operator.floordiv(getitem_47, 2)
    view_16=cat_9.reshape(getitem_46, 2, floordiv_8, getitem_48, getitem_49)
    transpose_9=F.transpose(view_16, Helper.transpose_pat(view_16.ndim, 1, 2))
    contiguous_8=transpose_9
    view_17=contiguous_8.reshape(getitem_46, -1, getitem_48, getitem_49)
    chunk_8=F.split(view_17, 2, axis=1)
    getitem_50=operator.getitem(chunk_8, 0)
    getitem_51=operator.getitem(chunk_8, 1)
    stage3_5_branch2_0=getattr(getattr(root.stage3, "5").branch2, "0")(getitem_51)
    stage3_5_branch2_1=getattr(getattr(root.stage3, "5").branch2, "1")(stage3_5_branch2_0)
    stage3_5_branch2_2=getattr(getattr(root.stage3, "5").branch2, "2")(stage3_5_branch2_1)
    stage3_5_branch2_3=getattr(getattr(root.stage3, "5").branch2, "3")(stage3_5_branch2_2)
    stage3_5_branch2_4=getattr(getattr(root.stage3, "5").branch2, "4")(stage3_5_branch2_3)
    stage3_5_branch2_5=getattr(getattr(root.stage3, "5").branch2, "5")(stage3_5_branch2_4)
    stage3_5_branch2_6=getattr(getattr(root.stage3, "5").branch2, "6")(stage3_5_branch2_5)
    stage3_5_branch2_7=getattr(getattr(root.stage3, "5").branch2, "7")(stage3_5_branch2_6)
    cat_10=F.concat((getitem_50, stage3_5_branch2_7), axis = 1)
    size_9=cat_10.shape
    getitem_52=operator.getitem(size_9, 0)
    getitem_53=operator.getitem(size_9, 1)
    getitem_54=operator.getitem(size_9, 2)
    getitem_55=operator.getitem(size_9, 3)
    floordiv_9=operator.floordiv(getitem_53, 2)
    view_18=cat_10.reshape(getitem_52, 2, floordiv_9, getitem_54, getitem_55)
    transpose_10=F.transpose(view_18, Helper.transpose_pat(view_18.ndim, 1, 2))
    contiguous_9=transpose_10
    view_19=contiguous_9.reshape(getitem_52, -1, getitem_54, getitem_55)
    chunk_9=F.split(view_19, 2, axis=1)
    getitem_56=operator.getitem(chunk_9, 0)
    getitem_57=operator.getitem(chunk_9, 1)
    stage3_6_branch2_0=getattr(getattr(root.stage3, "6").branch2, "0")(getitem_57)
    stage3_6_branch2_1=getattr(getattr(root.stage3, "6").branch2, "1")(stage3_6_branch2_0)
    stage3_6_branch2_2=getattr(getattr(root.stage3, "6").branch2, "2")(stage3_6_branch2_1)
    stage3_6_branch2_3=getattr(getattr(root.stage3, "6").branch2, "3")(stage3_6_branch2_2)
    stage3_6_branch2_4=getattr(getattr(root.stage3, "6").branch2, "4")(stage3_6_branch2_3)
    stage3_6_branch2_5=getattr(getattr(root.stage3, "6").branch2, "5")(stage3_6_branch2_4)
    stage3_6_branch2_6=getattr(getattr(root.stage3, "6").branch2, "6")(stage3_6_branch2_5)
    stage3_6_branch2_7=getattr(getattr(root.stage3, "6").branch2, "7")(stage3_6_branch2_6)
    cat_11=F.concat((getitem_56, stage3_6_branch2_7), axis = 1)
    size_10=cat_11.shape
    getitem_58=operator.getitem(size_10, 0)
    getitem_59=operator.getitem(size_10, 1)
    getitem_60=operator.getitem(size_10, 2)
    getitem_61=operator.getitem(size_10, 3)
    floordiv_10=operator.floordiv(getitem_59, 2)
    view_20=cat_11.reshape(getitem_58, 2, floordiv_10, getitem_60, getitem_61)
    transpose_11=F.transpose(view_20, Helper.transpose_pat(view_20.ndim, 1, 2))
    contiguous_10=transpose_11
    view_21=contiguous_10.reshape(getitem_58, -1, getitem_60, getitem_61)
    chunk_10=F.split(view_21, 2, axis=1)
    getitem_62=operator.getitem(chunk_10, 0)
    getitem_63=operator.getitem(chunk_10, 1)
    stage3_7_branch2_0=getattr(getattr(root.stage3, "7").branch2, "0")(getitem_63)
    stage3_7_branch2_1=getattr(getattr(root.stage3, "7").branch2, "1")(stage3_7_branch2_0)
    stage3_7_branch2_2=getattr(getattr(root.stage3, "7").branch2, "2")(stage3_7_branch2_1)
    stage3_7_branch2_3=getattr(getattr(root.stage3, "7").branch2, "3")(stage3_7_branch2_2)
    stage3_7_branch2_4=getattr(getattr(root.stage3, "7").branch2, "4")(stage3_7_branch2_3)
    stage3_7_branch2_5=getattr(getattr(root.stage3, "7").branch2, "5")(stage3_7_branch2_4)
    stage3_7_branch2_6=getattr(getattr(root.stage3, "7").branch2, "6")(stage3_7_branch2_5)
    stage3_7_branch2_7=getattr(getattr(root.stage3, "7").branch2, "7")(stage3_7_branch2_6)
    cat_12=F.concat((getitem_62, stage3_7_branch2_7), axis = 1)
    size_11=cat_12.shape
    getitem_64=operator.getitem(size_11, 0)
    getitem_65=operator.getitem(size_11, 1)
    getitem_66=operator.getitem(size_11, 2)
    getitem_67=operator.getitem(size_11, 3)
    floordiv_11=operator.floordiv(getitem_65, 2)
    view_22=cat_12.reshape(getitem_64, 2, floordiv_11, getitem_66, getitem_67)
    transpose_12=F.transpose(view_22, Helper.transpose_pat(view_22.ndim, 1, 2))
    contiguous_11=transpose_12
    view_23=contiguous_11.reshape(getitem_64, -1, getitem_66, getitem_67)
    stage4_0_branch1_0=getattr(getattr(root.stage4, "0").branch1, "0")(view_23)
    stage4_0_branch1_1=getattr(getattr(root.stage4, "0").branch1, "1")(stage4_0_branch1_0)
    stage4_0_branch1_2=getattr(getattr(root.stage4, "0").branch1, "2")(stage4_0_branch1_1)
    stage4_0_branch1_3=getattr(getattr(root.stage4, "0").branch1, "3")(stage4_0_branch1_2)
    stage4_0_branch1_4=getattr(getattr(root.stage4, "0").branch1, "4")(stage4_0_branch1_3)
    stage4_0_branch2_0=getattr(getattr(root.stage4, "0").branch2, "0")(view_23)
    stage4_0_branch2_1=getattr(getattr(root.stage4, "0").branch2, "1")(stage4_0_branch2_0)
    stage4_0_branch2_2=getattr(getattr(root.stage4, "0").branch2, "2")(stage4_0_branch2_1)
    stage4_0_branch2_3=getattr(getattr(root.stage4, "0").branch2, "3")(stage4_0_branch2_2)
    stage4_0_branch2_4=getattr(getattr(root.stage4, "0").branch2, "4")(stage4_0_branch2_3)
    stage4_0_branch2_5=getattr(getattr(root.stage4, "0").branch2, "5")(stage4_0_branch2_4)
    stage4_0_branch2_6=getattr(getattr(root.stage4, "0").branch2, "6")(stage4_0_branch2_5)
    stage4_0_branch2_7=getattr(getattr(root.stage4, "0").branch2, "7")(stage4_0_branch2_6)
    cat_13=F.concat((stage4_0_branch1_4, stage4_0_branch2_7), axis = 1)
    size_12=cat_13.shape
    getitem_68=operator.getitem(size_12, 0)
    getitem_69=operator.getitem(size_12, 1)
    getitem_70=operator.getitem(size_12, 2)
    getitem_71=operator.getitem(size_12, 3)
    floordiv_12=operator.floordiv(getitem_69, 2)
    view_24=cat_13.reshape(getitem_68, 2, floordiv_12, getitem_70, getitem_71)
    transpose_13=F.transpose(view_24, Helper.transpose_pat(view_24.ndim, 1, 2))
    contiguous_12=transpose_13
    view_25=contiguous_12.reshape(getitem_68, -1, getitem_70, getitem_71)
    chunk_11=F.split(view_25, 2, axis=1)
    getitem_72=operator.getitem(chunk_11, 0)
    getitem_73=operator.getitem(chunk_11, 1)
    stage4_1_branch2_0=getattr(getattr(root.stage4, "1").branch2, "0")(getitem_73)
    stage4_1_branch2_1=getattr(getattr(root.stage4, "1").branch2, "1")(stage4_1_branch2_0)
    stage4_1_branch2_2=getattr(getattr(root.stage4, "1").branch2, "2")(stage4_1_branch2_1)
    stage4_1_branch2_3=getattr(getattr(root.stage4, "1").branch2, "3")(stage4_1_branch2_2)
    stage4_1_branch2_4=getattr(getattr(root.stage4, "1").branch2, "4")(stage4_1_branch2_3)
    stage4_1_branch2_5=getattr(getattr(root.stage4, "1").branch2, "5")(stage4_1_branch2_4)
    stage4_1_branch2_6=getattr(getattr(root.stage4, "1").branch2, "6")(stage4_1_branch2_5)
    stage4_1_branch2_7=getattr(getattr(root.stage4, "1").branch2, "7")(stage4_1_branch2_6)
    cat_14=F.concat((getitem_72, stage4_1_branch2_7), axis = 1)
    size_13=cat_14.shape
    getitem_74=operator.getitem(size_13, 0)
    getitem_75=operator.getitem(size_13, 1)
    getitem_76=operator.getitem(size_13, 2)
    getitem_77=operator.getitem(size_13, 3)
    floordiv_13=operator.floordiv(getitem_75, 2)
    view_26=cat_14.reshape(getitem_74, 2, floordiv_13, getitem_76, getitem_77)
    transpose_14=F.transpose(view_26, Helper.transpose_pat(view_26.ndim, 1, 2))
    contiguous_13=transpose_14
    view_27=contiguous_13.reshape(getitem_74, -1, getitem_76, getitem_77)
    chunk_12=F.split(view_27, 2, axis=1)
    getitem_78=operator.getitem(chunk_12, 0)
    getitem_79=operator.getitem(chunk_12, 1)
    stage4_2_branch2_0=getattr(getattr(root.stage4, "2").branch2, "0")(getitem_79)
    stage4_2_branch2_1=getattr(getattr(root.stage4, "2").branch2, "1")(stage4_2_branch2_0)
    stage4_2_branch2_2=getattr(getattr(root.stage4, "2").branch2, "2")(stage4_2_branch2_1)
    stage4_2_branch2_3=getattr(getattr(root.stage4, "2").branch2, "3")(stage4_2_branch2_2)
    stage4_2_branch2_4=getattr(getattr(root.stage4, "2").branch2, "4")(stage4_2_branch2_3)
    stage4_2_branch2_5=getattr(getattr(root.stage4, "2").branch2, "5")(stage4_2_branch2_4)
    stage4_2_branch2_6=getattr(getattr(root.stage4, "2").branch2, "6")(stage4_2_branch2_5)
    stage4_2_branch2_7=getattr(getattr(root.stage4, "2").branch2, "7")(stage4_2_branch2_6)
    cat_15=F.concat((getitem_78, stage4_2_branch2_7), axis = 1)
    size_14=cat_15.shape
    getitem_80=operator.getitem(size_14, 0)
    getitem_81=operator.getitem(size_14, 1)
    getitem_82=operator.getitem(size_14, 2)
    getitem_83=operator.getitem(size_14, 3)
    floordiv_14=operator.floordiv(getitem_81, 2)
    view_28=cat_15.reshape(getitem_80, 2, floordiv_14, getitem_82, getitem_83)
    transpose_15=F.transpose(view_28, Helper.transpose_pat(view_28.ndim, 1, 2))
    contiguous_14=transpose_15
    view_29=contiguous_14.reshape(getitem_80, -1, getitem_82, getitem_83)
    chunk_13=F.split(view_29, 2, axis=1)
    getitem_84=operator.getitem(chunk_13, 0)
    getitem_85=operator.getitem(chunk_13, 1)
    stage4_3_branch2_0=getattr(getattr(root.stage4, "3").branch2, "0")(getitem_85)
    stage4_3_branch2_1=getattr(getattr(root.stage4, "3").branch2, "1")(stage4_3_branch2_0)
    stage4_3_branch2_2=getattr(getattr(root.stage4, "3").branch2, "2")(stage4_3_branch2_1)
    stage4_3_branch2_3=getattr(getattr(root.stage4, "3").branch2, "3")(stage4_3_branch2_2)
    stage4_3_branch2_4=getattr(getattr(root.stage4, "3").branch2, "4")(stage4_3_branch2_3)
    stage4_3_branch2_5=getattr(getattr(root.stage4, "3").branch2, "5")(stage4_3_branch2_4)
    stage4_3_branch2_6=getattr(getattr(root.stage4, "3").branch2, "6")(stage4_3_branch2_5)
    stage4_3_branch2_7=getattr(getattr(root.stage4, "3").branch2, "7")(stage4_3_branch2_6)
    cat_16=F.concat((getitem_84, stage4_3_branch2_7), axis = 1)
    size_15=cat_16.shape
    getitem_86=operator.getitem(size_15, 0)
    getitem_87=operator.getitem(size_15, 1)
    getitem_88=operator.getitem(size_15, 2)
    getitem_89=operator.getitem(size_15, 3)
    floordiv_15=operator.floordiv(getitem_87, 2)
    view_30=cat_16.reshape(getitem_86, 2, floordiv_15, getitem_88, getitem_89)
    transpose_16=F.transpose(view_30, Helper.transpose_pat(view_30.ndim, 1, 2))
    contiguous_15=transpose_16
    view_31=contiguous_15.reshape(getitem_86, -1, getitem_88, getitem_89)
    conv5_0=getattr(root.conv5, "0")(view_31)
    conv5_1=getattr(root.conv5, "1")(conv5_0)
    conv5_2=getattr(root.conv5, "2")(conv5_1)
    mean_1=conv5_2.mean([2, 3],)
    fc=root.fc(mean_1)
    return fc

with open("state.pkl", "rb") as f:
    state = pickle.load(f)
tstate = root.state_dict()
for k in tstate.keys():
    state[k] = state[k].reshape(tstate[k].shape)
root.load_state_dict(state, strict=False)
data = tensor(np.random.random([1, 3, 224, 224]).astype(np.float32))

root.eval()
ret = forward(data)
forward.dump("model.mgb", arg_names=["data"])
